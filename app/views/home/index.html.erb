<style>

    body {
        font: 10px sans-serif;
    }

    .arc path {
        stroke: #fff;
    }

</style>
<div id="diagram"></div>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

    var width = 300,
            height = 500,
            radius = Math.min(width, height) / 2;

    var color = d3.scale.ordinal()
            .range(["#98abc5", "#8a89a6", "#7b6888"]);

    var arc = d3.svg.arc()
            .outerRadius(radius - 10)
            .innerRadius(0);

    var pie = d3.layout.pie()
            .sort(null)
            .value(function(d) { return d.count; });

    var svg = d3.select("#diagram").append("svg")
            .attr("width", width)
            .attr("height", height)
            .append("g")
            .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

    var data = [];

    <% @result_json.each do |record| %>
        hash = {}
        <% record.each_key do |key_name| %>
            hash["<%= key_name %>"] =  "<%= record[key_name] %>";
        <% end %>
        data.push(hash);
    <% end %>

    console.log(data);

    //d3.csv("/data.csv", function(error, data) {
    if(data) {

        data.forEach(function (d) {
            d.count = +d.count;
        });
        var g = svg.selectAll(".arc")
                .data(pie(data))
                .enter().append("g")
                .attr("class", "arc");

        g.append("path")
                .attr("d", arc)
                .style("fill", function (d) {
                    return color(d.data.status);
                });

        g.append("text")
                .attr("transform", function (d) {
                    return "translate(" + arc.centroid(d) + ")";
                })
                .attr("dy", ".35em")
                .style("text-anchor", "middle")
                .text(function (d) {
                    return d.data.status;
                });
    }
    //});

</script>